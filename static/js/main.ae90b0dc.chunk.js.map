{"version":3,"sources":["utils/TimerUtils.js","resources/sound/beep.mp3","resources/sound/final_beep.mp3","components/Header.js","views/Home.js","components/TimerModal.js","components/TimerModalAmrap.js","components/TimerDisplay.js","components/ProgressBar.js","views/Amrap.js","components/TimerModalEmom.js","components/RoundSeparator.js","components/RoundCircleBar.js","views/Emom.js","components/TimerModalTabata.js","views/Tabata.js","components/ChronometerDisplay.js","views/Stopwatch.js","views/Workout.js","views/App.js","views/AppContainer.js","serviceWorker.js","index.js"],"names":["exports","getMinutes","value","getSeconds","getMilliSeconds","getMilliSecondsFromSeconds","getPercentageCompleted","obtained","total","toFixed","module","Header","useState","collapsed","setCollapsed","toggleNavbar","Navbar","color","className","light","NavbarBrand","href","NavbarToggler","onClick","Collapse","isOpen","navbar","Nav","NavItem","to","Home","React","Component","TimerModal","props","Button","toggle","Modal","modal","ModalHeader","title","ModalBody","body","ModalFooter","save","sliderStyle","track","backgroundColor","active","thumb","width","height","disabled","opacity","TimerModalAmrap","require","getMilliseconds","setModal","x","startTime","wod","wodName","state","setState","startTimeInit","wodNameInit","styles","xmax","xmin","onChange","Input","id","name","type","maxlength","placeholder","event","target","handleInputChange","TimerDisplay","seconds","Math","floor","currentTime","slice","minutes","ProgressBar","remainingPercentage","this","percentageCompleted","Progress","multi","animated","striped","bar","colorCompleted","colorRemaining","Amrap","timerOn","start","console","log","process","timer","setInterval","checkTime","stop","reset","time","audio","play","finalAudio","clearInterval","ref","src","loop","autoPlay","TimerModalEmom","rounds","roundsInit","Container","Row","Col","length","values","i","push","pop","map","inputField","index","Separator","style","position","transform","turns","RoundSeparator","count","_","range","RoundCircleBar","default_stroke_width","default_round_separator_width","default_round_background","default_stroke_line_cap","valueRounds","round","totalRounds","text","strokeWidth","buildStyles","strokeLinecap","background","Emom","r","activateTimer","resume","startDelay","TimerModalTabata","work","rest","workInit","restInit","Tabata","workPercentage","restPercentage","eatRound","delay","fx","ChronometerDisplay","timerTime","centiseconds","hours","Stopwatch","timerStart","Date","now","Workout","exact","path","component","App","AppContainer","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","error","render","document","getElementById","URL","origin","addEventListener","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.ae90b0dc.chunk.js","sourcesContent":["\nvar getMinutes = function (value) {\n    if(value === 0) return 1\n    let minutes = ((value / (1000*60)) % 60)\n    return minutes\n}\n\nvar getSeconds = function (value) {\n    if(value === 0) return 1\n    let seconds = ((value / (1000)))\n    return seconds\n}\n\nvar getMilliSeconds = function (value) {\n    let millis = value * 60 * 1000\n    return millis\n}\n\nvar getMilliSecondsFromSeconds = function (value) {\n    let millis = value * 1000;\n    return millis\n}\n\nvar getPercentageCompleted = function (obtained,total) {\n    var percent = obtained*100/total;\n    return 100 - percent.toFixed(0)\n}\n\nexports.getMinutes = getMinutes\nexports.getSeconds = getSeconds\nexports.getMilliSeconds = getMilliSeconds\nexports.getMilliSecondsFromSeconds = getMilliSecondsFromSeconds\nexports.getPercentageCompleted = getPercentageCompleted","module.exports = __webpack_public_path__ + \"static/media/beep.c5d5cada.mp3\";","module.exports = __webpack_public_path__ + \"static/media/final_beep.eef56b30.mp3\";","\nimport React, { useState } from 'react';\n\nimport { Link } from 'react-router-dom';\n\nimport { Collapse, Navbar, NavbarToggler, NavbarBrand, Nav, NavItem, NavLink } from 'reactstrap';\nimport '../css/views/Header.css';\n\nconst Header = () => {\n\n  const [collapsed, setCollapsed] = useState(true)\n  const toggleNavbar = () => setCollapsed(!collapsed)\n\n  return (\n    <Navbar color=\"faded\" className=\"header\" light>\n        <NavbarBrand href=\"/cf-ajastin\" className=\"mr-auto header-title\">CF AJASTIN</NavbarBrand>\n        <NavbarToggler onClick={toggleNavbar} className=\"header-toggle-icon header-toggler \" />\n        <Collapse isOpen={!collapsed} navbar>\n          <Nav navbar>\n            <NavItem>\n              <Link onClick={toggleNavbar} className=\"header-item\" to=\"/amrap/\">AMRAP</Link>\n            </NavItem>\n            <NavItem>\n              <Link onClick={toggleNavbar} className=\"header-item\" to=\"/emom/\">EMOM</Link>\n            </NavItem>\n            <NavItem>\n              <Link onClick={toggleNavbar} className=\"header-item\" to=\"/tabata/\">TABATA</Link>\n            </NavItem>\n            <NavItem>\n              <Link onClick={toggleNavbar} className=\"header-item\" to=\"/stopwatch/\">SEKUNTIKELLO</Link>\n            </NavItem>\n          </Nav>\n        </Collapse>\n    </Navbar>\n  );\n  \n}\n\nexport default Header\n","\nimport React from 'react';\n\nimport { Link } from 'react-router-dom';\n\nimport '../css/views/Home.css';\n\nexport default class Home extends React.Component {\n  render() {\n    return([\n      <header className=\"home-box-container\">\n        <div className=\"timer-home-wod-name\">Valitse WODn sopiva ajastin.</div>\n        <Link className=\"header-item\" to=\"/amrap/\">AMRAP</Link>\n        <Link className=\"header-item\" to=\"/emom/\">EMOM</Link>\n        <Link className=\"header-item\" to=\"/tabata/\">TABATA</Link>\n        <Link className=\"header-item\" to=\"/stopwatch/\">SEKUNTIKELLO</Link>\n      </header>\n\n    ]);\n  }\n  \n}\n","import React from 'react';\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\n\nexport const TimerModal = (props) => {\n    return [\n        <Button color=\"warning\" onClick={props.toggle}>ASETUKSET</Button>,\n        <Modal className=\"timer-modal-content\" isOpen={props.modal} toggle={props.toggle} >\n          <ModalHeader className=\"timer-modal-header\" toggle={props.toggle}>{props.title}</ModalHeader>\n          <ModalBody>\n            {props.body}\n          </ModalBody>\n          <ModalFooter>\n            <Button color=\"warning\" onClick={props.save}>TALLENNA</Button>\n            <Button color=\"secondary\" onClick={props.toggle}>PERUUTA</Button>\n          </ModalFooter>\n        </Modal>   \n    ];\n}\n\nexport default TimerModal\n\n\n","import React, { useState } from 'react';\n\nimport TimerModal from './TimerModal';\n\nimport Slider from 'react-input-slider';\n\nimport { Input } from 'reactstrap';\n\nimport '../css/components/TimerModalAmrap.css'\n\nconst sliderStyle = {\n    track: {\n        backgroundColor: '#f6c344'\n    },\n    active: {\n        backgroundColor: '#5cb85c'\n    },\n    thumb: {\n        width: 25,\n        height: 25\n    },\n    disabled: {\n        opacity: 1\n    }\n};\n\nexport const TimerModalAmrap = (props) => {\n    var getMinutes = require('../utils/TimerUtils').getMinutes;\n    var getMilliseconds = require('../utils/TimerUtils').getMilliSeconds;\n    const [modal, setModal] = useState(false);\n    const [state, setState] = useState({ \n        x: getMinutes(props.startTime), \n        wod: props.wodName\n    });\n    const toggle = () => setModal(!modal);\n    const handleInputChange = (event) => {\n        setState({\n            x: state.x,\n            wod: event.target.value\n        })\n    };\n    const save = () => {\n        props.startTimeInit(getMilliseconds(state.x))\n        if(state.wod !== null) props.wodNameInit(state.wod)\n        else props.wodNameInit('shut up and train')\n        toggle()\n    };\n    return [\n        <TimerModal \n            modal={modal}\n            toggle={toggle}\n            save={save}\n            title={props.title}\n            body={\n                <div>\n                    <div className=\"timer-modal-amrap-minutes\">{state.x} minuutit</div>\n                    <Slider\n                        styles={sliderStyle}\n                        x={state.x}\n                        xmax={59}\n                        xmin={1}\n                        onChange={({ x }) => setState(state => ({ ...state, x }))}/>\n                    <Input \n                        className=\"timer-modal-amrap-wod-name\" \n                        id=\"wodName\"\n                        name=\"wodName\"\n                        type=\"text\" \n                        maxlength=\"22\"\n                        placeholder=\"Mikä wod on kyseessä?\"\n                        onChange={event => handleInputChange(event)}/>\n                </div>\n            }/> \n    ];\n}\n\nexport default TimerModalAmrap\n\n\n\n","import React from 'react';\n\nimport '../css/components/TimerDisplay.css'\n\nexport const TimerDisplay = (props) => {\n  let seconds = (\"0\" + (Math.floor((props.currentTime / 1000) % 60) % 60)).slice(-2)\n  let minutes = (\"0\" + Math.floor((props.currentTime / 60000) % 60)).slice(-2)\n  if(props.type === 'amrap' || props.type === 'emom') \n    return <div className={props.className}>{minutes} : {seconds}</div>\n  if(props.type === 'tabata') \n    return <div className={props.className}>{seconds}</div>\n}\n\nexport default TimerDisplay","import React from 'react';\n\nimport { Progress} from 'reactstrap';\n\nimport '../css/components/ProgressBar.css';\n\nexport default class ProgressBar extends React.Component {\n  \n    render() {\n        const remainingPercentage = 100 - this.props.percentageCompleted\n        return (\n          <div className>\n            <Progress multi>\n              <Progress animated striped bar color={this.props.colorCompleted} value={this.props.percentageCompleted} />\n              <Progress animated striped bar color={this.props.colorRemaining} value={remainingPercentage}/>\n            </Progress>\n            <div className=\"timer-progress-bar-percentage\">{this.props.percentageCompleted}% valmista</div>\n          </div>\n        );\n    }\n  \n}\n","\nimport React from 'react';\n\nimport { Button } from 'reactstrap';\n\nimport TimerModalAmrap from '../components/TimerModalAmrap.js';\nimport TimerDisplay from '../components/TimerDisplay.js';\nimport ProgressBar from '../components/ProgressBar.js'\n\nimport '../css/views/Amrap.css';\n\nexport default class Amrap extends React.Component {\n\n  state = {\n    timerOn: false,\n    wodName: null, \n    currentTime: 0,\n    startTime: 0, \n    percentageCompleted: 0,\n  }\n\n  /*\n  TIMER: INIT\n  */\n\n  startTimeInit = (value) => {\n    this.setState({\n      startTime: value,\n      currentTime: value,\n    })\n  }\n\n  wodNameInit = (value) => {\n    this.setState({\n      wodName: value,\n    })\n  }\n\n  /*\n  TIMER: MANAGEMENT\n  */\n\n  start = () => {\n    \n    console.log('public url: ', process.env.PUBLIC_URL)\n    this.setState({\n      timerOn: true,\n    })\n    this.timer = setInterval(() => {\n      if(!this.checkTime()) {\n        this.stop()\n        this.reset()\n      }\n    }, 1000)\n  };\n\n  checkTime = () => {\n    const time = this.state.currentTime - 1000\n    var getPercentageCompleted = require('../utils/TimerUtils').getPercentageCompleted\n    if(time > 0) {\n      if(time <= 5000) {\n        this.audio.play()\n      }\n      this.setState({\n        currentTime: time, \n        percentageCompleted: getPercentageCompleted(time, this.state.startTime)\n      })\n      return true\n    }\n    this.finalAudio.play()\n    return false\n  };\n\n  stop = () => {\n    clearInterval(this.timer);\n    this.setState({ timerOn: false })\n  };\n\n  reset = () => {\n    this.setState({\n      currentTime: this.state.startTime,\n      percentageCompleted: 0\n    })\n  };\n\n  render() {\n    return([\n        <audio\n        ref={audio => this.audio = audio}\n        src={require(`../resources/sound/beep.mp3`)}\n        loop={false}\n        autoPlay={false}/>,\n        <audio\n        ref={finalAudio => this.finalAudio = finalAudio}\n        src={require(`../resources/sound/final_beep.mp3`)}\n        loop={false}\n        autoPlay={false}/>,\n        <div className=\"amrap-box-container\">\n          <div className=\"timer-amrap\">\n              <div className=\"timer-amrap-label\">AMRAP</div>\n                <TimerModalAmrap \n                      title=\"amrap settings\"\n                      startTime={this.state.startTime}\n                      startTimeInit={this.startTimeInit}\n                      wodName={this.state.wodName}\n                      wodNameInit={this.wodNameInit} />\n                {this.state.timerOn === false && (this.state.currentTime === this.state.startTime) && (this.state.currentTime > 0) && (\n                  <Button color=\"success\" onClick={this.start}>ALOITA</Button>\n                )}\n                {this.state.timerOn === true && this.state.currentTime >= 1000 && (\n                  <Button color=\"danger\" onClick={this.stop}>LOPETA</Button>\n                )}\n                {this.state.timerOn === false && (this.state.currentTime !== this.state.startTime && this.state.currentTime > 0) && (\n                  <Button color=\"info\" onClick={this.start}>JATKA</Button>\n                )}\n                {(this.state.timerOn === false) && (this.state.currentTime !== this.state.startTime) && (\n                  <Button color=\"secondary\" onClick={this.reset}>PERUUTA</Button>\n                )}\n                <TimerDisplay\n                  className=\"timer-time-amrap\"\n                  type=\"amrap\" \n                  currentTime={this.state.currentTime}/>\n                <ProgressBar \n                  type=\"amrap\"\n                  className=\"progress-bar-amrap\"\n                  colorCompleted=\"success\"\n                  colorRemaining=\"warning\"\n                  percentageCompleted={this.state.percentageCompleted}/>\n                <div className=\"timer-amrap-wod-name\">{this.state.wodName}</div>\n          </div>\n        </div>\n    ]);\n  }\n  \n}\n","import React, { useState } from 'react';\n\nimport TimerModal from './TimerModal';\n\nimport { Button, Input, Container, Row, Col } from 'reactstrap';\n\nimport '../css/components/TimerModalEmom.css'\n\nexport const TimerModalEmom = (props) => {\n    const[state,setState] = useState({\n        rounds: props.rounds\n    });\n    const addItem = () => {\n        if(state.rounds.length < 25) {\n            const values = [...state.rounds]\n            let i = values.length + 1\n            values.push({ name: 'EMOM ' + i })\n            setState({\n                rounds: values\n            })\n        }\n    };\n    const removeItem = () => {\n        if(state.rounds.length > 1) {\n            const values = [...state.rounds]\n            values.pop()\n            setState({\n                rounds: values\n            })\n        }\n    };\n    const handleInputChange = (index, event) => {\n        const values = [...state.rounds];\n        if (event.target.name === \"name\") {\n            values[index].name = event.target.value\n        } \n        setState({\n            rounds: values\n        })\n    };\n    const [modal, setModal] = useState(false);\n    const toggle = () => setModal(!modal);\n    const save = () => {\n        props.roundsInit(state.rounds)\n        toggle()\n    };\n    return [\n        <TimerModal \n            modal={modal}\n            toggle={toggle}\n            save={save}\n            title={props.title}\n            body={\n                <div> \n                    <h3>\n                        <Container>\n                            <Row>\n                                <Col>\n                                    <Button color=\"warning\" onClick={addItem}>+</Button>\n                                    <Button className=\"timer-modal-emom-rounds-button\" onClick={removeItem} color=\"secondary\">-</Button>\n                                </Col>\n                                <Col>\n                                    <div className=\"timer-modal-emom-rounds\">{state.rounds.length} kierrosta</div>\n                                </Col>\n                            </Row>\n                            <Row className=\"timer-modal-emom-rounds-details\">\n                                <Col>\n                                    {state.rounds.map((inputField, index) => (\n                                        <Input \n                                            className=\"timer-modal-emom-wod-name\"\n                                            type=\"text\" \n                                            id=\"name\" \n                                            name=\"name\" \n                                            maxlength=\"22\"\n                                            value={inputField.name} \n                                            onChange={event => handleInputChange(index, event)}/>\n                                    ))}\n                                </Col>\n                            </Row>\n                        </Container>                        \n                    </h3>\n                </div>\n            }/>  \n    ];\n}\n\nexport default TimerModalEmom\n\n\n\n","import React from \"react\";\nimport _ from \"lodash\";\n\nconst Separator = (props) => {\n  return (\n    <div\n      style={{\n        position: \"absolute\",\n        height: \"100%\",\n        transform: `rotate(${props.turns}turn)`\n      }}\n    >\n      <div style={props.style} />\n    </div>\n  );\n}\n\nconst RoundSeparator = (props) => {\n  const turns = 1 / props.count;\n  return _.range(props.count).map(index => (\n    <Separator turns={index * turns} style={props.style} />\n  ));\n}\n\nexport default RoundSeparator","import React from 'react';\n\nimport RoundSeparator from './RoundSeparator';\n\nimport '../css/components/RoundCircleBar.css';\nimport {\n  CircularProgressbarWithChildren,\n  buildStyles\n} from 'react-circular-progressbar';\nimport 'react-circular-progressbar/dist/styles.css';\n\nexport default class RoundCircleBar extends React.Component {\n  \n    default_stroke_width = 10\n    default_round_separator_width = '2px'\n    default_round_background = 'red'\n    default_stroke_line_cap = 'butt'\n\n    valueRounds = () => {\n      return 0\n    }\n\n    render() {\n      const rounds = this.props.round + '/' + this.props.totalRounds\n      let value = 0\n      if(this.props.totalRounds !== 0 && this.props.round !== 0) \n        value = (100 / this.props.totalRounds) * (this.props.round)\n      return (\n        <CircularProgressbarWithChildren\n            value={value}\n            text={rounds}\n            strokeWidth={this.default_stroke_width}\n            styles={buildStyles({\n              strokeLinecap: this.default_stroke_line_cap})}>\n            <RoundSeparator\n              count={this.props.totalRounds}\n              style={{\n                background: this.default_round_background,\n                width: this.default_round_separator_width,\n                height: `${10}%`}}/>\n        </CircularProgressbarWithChildren>\n      );\n    }\n  \n}\n","\nimport React from 'react';\n\nimport TimerModalEmom from '../components/TimerModalEmom.js'\nimport TimerDisplay from '../components/TimerDisplay.js'\nimport RoundCircleBar from '../components/RoundCircleBar.js'\n\nimport { Button, Container, Row, Col } from 'reactstrap'\n\nimport '../css/views/Emom.css';\n\nexport default class Emom extends React.Component { \n  state = {\n    timerOn: false,\n    currentTime: 0,\n    rounds: [], \n    round: null, \n    i: 0\n  }\n\n  /*\n  TIMER: INIT\n  */\n\n  roundsInit = (value) => {\n    if(value !== null && value.length > 0)\n      this.setState({\n        rounds: value\n      })\n  }\n\n  /*\n  TIMER: MANAGEMENT\n  */\n\n  start = () => {\n    if(this.state.i < this.state.rounds.length) {\n      var r = this.state.rounds[this.state.i]\n      this.setState({\n        timerOn: true,\n        round: r, \n        currentTime: 60000\n      })\n      this.activateTimer()\n    } else {\n      this.reset()\n    }  \n  };\n\n  resume = () => {\n    this.setState({\n      timerOn: true,\n      currentTime: this.state.currentTime\n    })\n    this.activateTimer()\n  }\n\n  activateTimer = () => {\n    this.timer = setInterval(() => {\n      if(!this.checkTime()) {\n        this.setState({\n          i: this.state.i + 1,\n          currentTime: 60000\n        })\n        clearInterval(this.timer)\n        this.startDelay(800)\n      }\n    }, 1000) \n  }\n\n  startDelay(value) {\n    this.timer = setInterval(() => {\n      if(value>=0) {\n        value = value - 200\n      } else {\n        clearInterval(this.timer)\n        this.start()\n      }\n    }, 200)   \n  }\n\n  checkTime = () => {\n    const time = this.state.currentTime - 1000\n    if(time > 0) {\n      if(time <= 2000) {\n        this.audio.play()\n      }\n      this.setState({\n        currentTime: time\n      })\n      return true\n    }\n    this.finalAudio.play()\n    return false\n  };\n\n  stop = () => {\n    clearInterval(this.timer)\n    this.setState({ timerOn: false })\n  };\n\n  reset = () => {\n    this.stop()\n    this.setState({\n      timerOn: false,\n      currentTime: 0,\n      i: 0,\n      round: null\n    })\n  };\n \n  render() {\n     let wodName\n     let round = 0\n     if(this.state.round !== null) {\n        wodName = this.state.round.name\n        round = this.state.i\n     }\n     return([\n        <audio\n        ref={audio => this.audio = audio}\n        src={require(`../resources/sound/beep.mp3`)}\n        loop={false}\n        autoPlay={false}/>,\n        <audio\n        ref={finalAudio => this.finalAudio = finalAudio}\n        src={require(`../resources/sound/final_beep.mp3`)}\n        loop={false}\n        autoPlay={false}/>,\n        <div className=\"emom-box-container\">\n          <div className=\"timer-emom\">\n            <div className=\"timer-emom-label\">EMOM</div>\n            <TimerModalEmom \n              title=\"emom settings\"\n              rounds={this.state.rounds}\n              roundsInit={this.roundsInit}/>\n            {this.state.timerOn === false && (this.state.currentTime === 0) && (this.state.rounds.length > 0) && (\n              <Button color=\"success\" onClick={this.start}>ALOITA</Button>\n            )}\n            {this.state.timerOn === true && this.state.currentTime >= 1000 && (\n              <Button color=\"danger\" onClick={this.stop}>LOPETA</Button>\n            )}\n            {this.state.timerOn === false && (this.state.currentTime < 60000 && this.state.currentTime > 0) && (\n              <Button color=\"info\" onClick={this.resume}>JATKA</Button>\n            )}\n            {(this.state.timerOn === false) && (this.state.currentTime !== 0) && (this.state.rounds.length > 0) && (\n              <Button color=\"secondary\" onClick={this.reset}>PERUUTA</Button>\n            )}\n            <div className=\"timer-emom-display-container\">\n              <Container>\n                <Row>\n                  <Col>\n                    <TimerDisplay\n                      className=\"timer-time-emom\"\n                      type=\"emom\" \n                      currentTime={this.state.currentTime}/>\n                  </Col>\n                  <Col>\n                    <div className=\"timer-emom-round-bar\">\n                      <RoundCircleBar \n                        round={round}\n                        totalRounds={this.state.rounds.length}/>\n                    </div>\n                  </Col>\n                </Row>\n              </Container>\n            </div>\n            <div className=\"timer-emom-wod-name\">{wodName}</div>\n          </div>\n        </div>\n     ]);\n  }\n  \n}\n\n","import React, { useState } from 'react';\n\nimport TimerModal from './TimerModal';\n\nimport Slider from 'react-input-slider';\n\nimport { Button, Container, Row, Col } from 'reactstrap';\n\nimport '../css/components/TimerModalTabata.css'\n\nconst sliderStyle = {\n    track: {\n        backgroundColor: '#f6c344'\n    },\n    active: {\n        backgroundColor: '#5cb85c'\n    },\n    thumb: {\n        width: 25,\n        height: 25\n    },\n    disabled: {\n        opacity: 1\n    }\n};\n\nexport const TimerModalTabata = (props) => {\n    var getSeconds = require('../utils/TimerUtils').getSeconds;\n    var getMilliseconds = require('../utils/TimerUtils').getMilliSecondsFromSeconds;\n    const [modal, setModal] = useState(false);\n    const [state, setState] = useState({ \n        work: getSeconds(props.work), \n        rest: getSeconds(props.rest), \n        rounds: props.rounds\n    });\n    const addWork = () => {\n        if(state.work >= 59) return;\n        setState({\n            work: state.work + 1, \n            rest: state.rest,\n            rounds: state.rounds\n        })\n    };\n    const addRest = () => {\n        if(state.rest >= 59) return;\n        setState({\n            work: state.work, \n            rest: state.rest + 1,\n            rounds: state.rounds\n        })\n    };\n    const removeWork = () => {\n        if(state.work <= 1) return;\n        setState({\n            work: state.work - 1, \n            rest: state.rest,\n            rounds: state.rounds\n        })\n    };\n    const removeRest = () => {\n        if(state.rest <= 1) return;\n        setState({\n            work: state.work, \n            rest: state.rest - 1,\n            rounds: state.rounds\n        })\n    };\n    const handleRoundsChange = (value) =>{ \n        setState({\n            rounds: value,\n            rest: state.rest,\n            work: state.work\n        })\n    }\n    const toggle = () => setModal(!modal);\n    const save = () => {\n        props.workInit(getMilliseconds(state.work))\n        props.restInit(getMilliseconds(state.rest))\n        props.roundsInit(state.rounds)\n        toggle()\n    };\n    return [\n        <TimerModal \n            modal={modal}\n            toggle={toggle}\n            save={save}\n            title={props.title}\n            body={\n                <div>\n                    <Container>\n                        <Row>\n                            <Col>\n                                <Button color=\"warning\" onClick={addWork}>+</Button>\n                                <Button className=\"timer-modal-tabata-seconds-button\" onClick={removeWork} color=\"secondary\">-</Button>\n                            </Col>\n                            <Col>\n                                <div className=\"timer-modal-tabata-time\">{state.work} sekuntia, TYÖTÄ</div>\n                            </Col>\n                        </Row>\n                        <Row>\n                            <Col>\n                                <Button color=\"warning\" onClick={addRest}>+</Button>\n                                <Button className=\"timer-modal-tabata-seconds-button\" onClick={removeRest} color=\"secondary\">-</Button>\n                            </Col>\n                            <Col>\n                                <div className=\"timer-modal-tabata-time\">{state.rest} sekuntia, LEPOA</div>\n                            </Col>\n                        </Row>\n                        <Row className=\"timer-modal-tabata-rounds\">\n                            <Col>\n                                <Slider\n                                    styles={sliderStyle}\n                                    x={state.rounds}\n                                    xmax={30}\n                                    xmin={1}\n                                    onChange={({ x }) => handleRoundsChange(x)}/>\n                            </Col>\n                            <Col>\n                                <div className=\"timer-modal-tabata-rounds\">{state.rounds} kierrosta</div>\n                            </Col>\n                        </Row>\n                    </Container>    \n                </div>\n            }/> \n    ];\n}\n\nexport default TimerModalTabata\n\n\n\n","\nimport React from 'react';\n\nimport TimerModalTabata from '../components/TimerModalTabata.js'\nimport TimerDisplay from '../components/TimerDisplay.js'\nimport ProgressBar from '../components/ProgressBar.js'\n\nimport { Button, Container, Row, Col } from 'reactstrap'\n\nimport '../css/views/Tabata.css';\n\nexport default class Tabata extends React.Component {\n\n  state = {\n    timerOn: false,\n    work: 20000,\n    workInit: 20000,\n    workPercentage: 0,\n    rest: 10000,\n    restInit: 10000,\n    restPercentage: 0,\n    rounds: 8,\n    i: 1\n  }\n  \n  /*\n  TIMER: INIT\n  */\n\n  workInit = (value) => {\n    console.log(value)\n    this.setState({\n      work: value,\n      workInit: value\n    })\n  }\n\n  restInit = (value) => {\n    console.log(value)\n    this.setState({\n      rest: value,\n      restInit: value\n    })\n  }\n\n  roundsInit = (value) => {\n    this.setState({\n      rounds: value\n    })\n  }\n\n  /*\n  TIMER: MANAGEMENT\n  */\n\n  start = () => {\n    if(this.state.i <= this.state.rounds) {\n      this.setState({\n        timerOn: true,\n      })\n      this.eatRound('work')\n    }\n  }\n\n  eatRound = (type) => {\n    this.timer = setInterval(() => {\n      if(!this.checkTime(type)) {\n        clearInterval(this.timer);\n        if(type === 'rest') {\n          if(this.state.i === this.state.rounds) {\n            this.reset()\n            return\n          }\n          this.setState({\n            rest: this.state.restInit, \n            restPercentage: 0,\n            i: this.state.i + 1\n          })\n          this.delay(1000,'work')\n         } else {\n          this.setState({\n            work: this.state.workInit, \n            workPercentage: 0\n          })\n          this.delay(800,'rest')  \n        }\n      }\n    }, 1000)    \n  }\n\n  delay(value, fx) {\n    this.timer = setInterval(() => {\n      if(value>=0) {\n        value = value - 200\n      } else {\n        clearInterval(this.timer)\n        if(fx === 'work') {\n          this.start('work')\n        } \n        if(fx === 'rest') {\n          this.eatRound('rest')\n        }\n      }\n    }, 200)   \n  }\n\n  checkTime = (type) => {\n    let time\n    var getPercentageCompleted = require('../utils/TimerUtils').getPercentageCompleted;\n    if(type === 'work') {\n      time = this.state.work - 1000\n      if(time > 0) {\n        if(time <= 2000) {\n          this.audio.play()\n        }\n        this.setState({\n          work: time, \n          workPercentage: getPercentageCompleted(time, this.state.workInit)\n        })\n        return true\n      }\n    }\n    if(type === 'rest') {\n      time = this.state.rest - 1000 \n      if(time > 0) {\n        if(time <= 2000) {\n          this.audio.play()\n        }\n        this.setState({\n          rest: time, \n          restPercentage: getPercentageCompleted(time, this.state.restInit)\n        })\n        return true\n      }\n    }\n    this.finalAudio.play()\n    return false\n  };\n\n  stop = () => {\n    clearInterval(this.timer);\n    this.setState({ timerOn: false })\n  }\n\n  reset = () => {\n    this.stop()\n    this.setState({\n      work: this.state.workInit,\n      rest: this.state.restInit, \n      workPercentage: 0,\n      restPercentage: 0,\n      i : 1\n    })\n  }\n  \n  render() {\n    return([\n      <audio\n      ref={audio => this.audio = audio}\n      src={require(`../resources/sound/beep.mp3`)}\n      loop={false}\n      autoPlay={false}/>,\n      <audio\n      ref={finalAudio => this.finalAudio = finalAudio}\n      src={require(`../resources/sound/final_beep.mp3`)}\n      loop={false}\n      autoPlay={false}/>,\n      <div className=\"tabata-box-container\">\n        <div className=\"timer-tabata\">\n          <div className=\"timer-tabata-label\">TABATA</div>\n          <TimerModalTabata \n            title=\"tabata settings\"\n            work={this.state.workInit}\n            workInit={this.workInit}\n            rest={this.state.restInit}\n            restInit={this.restInit}\n            rounds={this.state.rounds}\n            roundsInit={this.roundsInit}/>\n          {this.state.timerOn === false && (\n            <Button color=\"success\" onClick={this.start}>ALOITA</Button>\n          )}\n          {(this.state.timerOn === true) && (\n            <Button color=\"secondary\" onClick={this.reset}>PERUUTA</Button>\n          )}\n          <div className=\"timer-tabata-display-container\">\n            <Container>\n              <Row>\n                <Col>\n                  <TimerDisplay\n                    className=\"timer-time-tabata timer-time-tabata-workColor\"\n                    type=\"tabata\" \n                    currentTime={this.state.work}/>\n                  <ProgressBar \n                    type=\"tabata\" \n                    colorCompleted=\"danger\"\n                    colorRemaining=\"secondary\"\n                    percentageCompleted={this.state.workPercentage}/>\n                </Col>\n                <Col>\n                  <TimerDisplay\n                    className=\"timer-time-tabata timer-time-tabata-restColor\"\n                    type=\"tabata\" \n                    currentTime={this.state.rest}/>\n                  <ProgressBar \n                    type=\"tabata\" \n                    colorCompleted=\"success\"\n                    colorRemaining=\"secondary\"\n                    percentageCompleted={this.state.restPercentage}/>\n                </Col>\n              </Row>\n            </Container>\n          </div>\n          <div className=\"timer-tabata-wod-name\">KIERROS: {this.state.i}/{this.state.rounds}</div>\n        </div>        \n      </div>\n    ]\n      \n    );\n  }\n  \n}","import React from \"react\";\n\nimport '../css/components/ChronometerDisplay.css';\n\nexport default class ChronometerDisplay extends React.Component {\n  \n  render() {\n    const { timerTime } = this.props.state;\n    let centiseconds = (\"0\" + (Math.floor(timerTime / 10) % 100)).slice(-2)\n    let seconds = (\"0\" + (Math.floor(timerTime / 1000) % 60)).slice(-2)\n    let minutes = (\"0\" + (Math.floor(timerTime / 60000) % 60)).slice(-2)\n    let hours = (\"0\" + Math.floor(timerTime / 3600000)).slice(-2)\n    return ([\n      <div className=\"chronometer-time\">\n        {hours} : {minutes} : {seconds} \n      </div>,\n      <div className=\"chronometer-time-centi\">{centiseconds}</div>\n    ]);\n  }\n\n}","\nimport React from 'react';\n\nimport { Button } from 'reactstrap';\nimport ChronometerDisplay from '../components/ChronometerDisplay';\n\nimport '../css/views/Stopwatch.css';\n\nexport default class Stopwatch extends React.Component {\n\n  state = {\n    timerOn: false,\n    timerStart: 0,\n    timerTime: 0\n  };\n\n  start = () => {\n    this.setState({\n      timerOn: true,\n      timerTime: this.state.timerTime,\n      timerStart: Date.now() - this.state.timerTime\n    })\n    this.timer = setInterval(() => {\n      this.setState({\n        timerTime: Date.now() - this.state.timerStart\n      })\n    }, 10);\n  };\n\n  stop = () => {\n    this.setState({ timerOn: false })\n    clearInterval(this.timer)\n  };\n\n  reset = () => {\n    this.setState({\n      timerStart: 0,\n      timerTime: 0\n    })\n  };\n  \n  render() {\n    return(\n      <div className=\"stopwatch-box-container\">\n        <div className=\"timer-stopwatch\">\n          <div className=\"timer-stopwatch-label\">SEKUNTIKELLO</div>\n          {this.state.timerOn === false && this.state.timerTime === 0 && (\n            <Button color=\"success\" onClick={this.start}>ALOITA</Button>\n          )}\n          {this.state.timerOn === true && (\n            <Button color=\"danger\" onClick={this.stop}>LOPETA</Button>\n          )}\n          {this.state.timerOn === false && this.state.timerTime > 0 && (\n            <Button color=\"info\" onClick={this.start}>JATKA</Button>\n          )}\n          {this.state.timerOn === false && this.state.timerTime > 0 && (\n            <Button color=\"secondary\" onClick={this.reset}>PERUUTA</Button>\n          )}\n          <ChronometerDisplay \n              state={this.state}/>\n        </div>\n      </div>\n    );\n  }\n  \n}","\nimport React from 'react';\nimport { Switch, Route } from 'react-router-dom';\n\nimport Home from './Home';\nimport Amrap from './Amrap';\nimport Emom from './Emom';\nimport Tabata from './Tabata';\nimport Stopwatch from './Stopwatch';\n\nimport '../css/views/Workout.css';\n\nexport default class Workout extends React.Component {\n  \n  render() {\n    return(\n      <div className=\"workout-box-container\">\n        <main>\n          <Switch>\n            <Route exact path='/' component={Home}/>\n            <Route path='/amrap' component={Amrap}/>\n            <Route path='/emom' component={Emom}/>\n            <Route path='/tabata' component={Tabata}/>\n            <Route path='/stopwatch' component={Stopwatch}/>\n          </Switch>\n        </main>\n      </div>\n    );\n  }\n  \n}\n","\nimport React from 'react';\nimport Header from '../components/Header';\nimport Workout from './Workout';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport '../css/views/App.css'\n\nexport default class App extends React.Component {\n  \n  render() {\n    return(\n      <div>\n        <Header/>\n        <Workout/>      \n      </div>\n    );\n  }\n  \n}\n","\nimport React from 'react';\nimport { BrowserRouter, HashRouter } from 'react-router-dom';\n\nimport App from './App';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nexport default class AppContainer extends React.Component {\n  \n  render() {\n    return(\n      <HashRouter>\n       <App />\n      </HashRouter>\n    );\n  }\n  \n}\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n    window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n  );\r\n  \r\n  export function register(config) {\r\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n      // The URL constructor is available in all browsers that support SW.\r\n      const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n      if (publicUrl.origin !== window.location.origin) {\r\n        // Our service worker won't work if PUBLIC_URL is on a different origin\r\n        // from what our page is served on. This might happen if a CDN is used to\r\n        // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n        return;\r\n      }\r\n  \r\n      window.addEventListener('load', () => {\r\n        const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n  \r\n        if (isLocalhost) {\r\n          // This is running on localhost. Let's check if a service worker still exists or not.\r\n          checkValidServiceWorker(swUrl, config);\r\n  \r\n          // Add some additional logging to localhost, pointing developers to the\r\n          // service worker/PWA documentation.\r\n          navigator.serviceWorker.ready.then(() => {\r\n            console.log(\r\n              'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n            );\r\n          });\r\n        } else {\r\n          // Is not localhost. Just register service worker\r\n          registerValidSW(swUrl, config);\r\n        }\r\n      });\r\n    }\r\n  }\r\n  \r\n  function registerValidSW(swUrl, config) {\r\n    navigator.serviceWorker\r\n      .register(swUrl)\r\n      .then(registration => {\r\n        registration.onupdatefound = () => {\r\n          const installingWorker = registration.installing;\r\n          if (installingWorker == null) {\r\n            return;\r\n          }\r\n          installingWorker.onstatechange = () => {\r\n            if (installingWorker.state === 'installed') {\r\n              if (navigator.serviceWorker.controller) {\r\n                // At this point, the updated precached content has been fetched,\r\n                // but the previous service worker will still serve the older\r\n                // content until all client tabs are closed.\r\n                console.log(\r\n                  'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n                );\r\n  \r\n                // Execute callback\r\n                if (config && config.onUpdate) {\r\n                  config.onUpdate(registration);\r\n                }\r\n              } else {\r\n                // At this point, everything has been precached.\r\n                // It's the perfect time to display a\r\n                // \"Content is cached for offline use.\" message.\r\n                console.log('Content is cached for offline use.');\r\n  \r\n                // Execute callback\r\n                if (config && config.onSuccess) {\r\n                  config.onSuccess(registration);\r\n                }\r\n              }\r\n            }\r\n          };\r\n        };\r\n      })\r\n      .catch(error => {\r\n        console.error('Error during service worker registration:', error);\r\n      });\r\n  }\r\n  \r\n  function checkValidServiceWorker(swUrl, config) {\r\n    // Check if the service worker can be found. If it can't reload the page.\r\n    fetch(swUrl)\r\n      .then(response => {\r\n        // Ensure service worker exists, and that we really are getting a JS file.\r\n        const contentType = response.headers.get('content-type');\r\n        if (\r\n          response.status === 404 ||\r\n          (contentType != null && contentType.indexOf('javascript') === -1)\r\n        ) {\r\n          // No service worker found. Probably a different app. Reload the page.\r\n          navigator.serviceWorker.ready.then(registration => {\r\n            registration.unregister().then(() => {\r\n              window.location.reload();\r\n            });\r\n          });\r\n        } else {\r\n          // Service worker found. Proceed as normal.\r\n          registerValidSW(swUrl, config);\r\n        }\r\n      })\r\n      .catch(() => {\r\n        console.log(\r\n          'No internet connection found. App is running in offline mode.'\r\n        );\r\n      });\r\n  }\r\n  \r\n  export function unregister() {\r\n    if ('serviceWorker' in navigator) {\r\n      navigator.serviceWorker.ready.then(registration => {\r\n        registration.unregister();\r\n      });\r\n    }\r\n  }","import React from 'react'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { render } from 'react-dom'\nimport AppContainer from './views/AppContainer';\nimport * as serviceWorker from './serviceWorker';\nrender((\n  <AppContainer/>\n), document.getElementById('root'));\nserviceWorker.register();"],"sourceRoot":""}